import pandas as pd
import re

# Load the Excel file
df = pd.read_excel('data.xlsx')

# Mapping rules: letter prefixes to numeric values
rules = {
    'A': 100,
    'B': 200,
    'C': 300,
    'D': 400,
    'E': 500,
    'F': 600,
    'G': 700
}

# Sort rules by prefix length (longest first to avoid partial matches)
sorted_rules = sorted(rules.items(), key=lambda x: -len(x[0]))

# Clean the 'code' column: remove spaces, tabs, convert to uppercase
df['code'] = df['code'].astype(str).str.strip().str.upper().str.replace(r'\s+', '', regex=True)

# Apply transformation rule to each code
def apply_rule(code):
    if pd.isna(code):
        return code
    for prefix, number in sorted_rules:
        if code.startswith(prefix):
            numeric_part = re.sub(r'\D', '', code[len(prefix):])
            return f"{number}{numeric_part}"
    return code  # return original if no match

# Overwrite 'code' column with transformed values
df['code'] = df['code'].apply(apply_rule)

# Save the modified DataFrame to a new Excel file
df.to_excel('data_converted.xlsx', index=False)
